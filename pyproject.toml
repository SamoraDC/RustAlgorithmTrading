[project]
name = "py_rt"
version = "0.1.0"
description = "Python-Rust Hybrid Algorithm Trading System"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Davi Castro Samora", email = "davi@example.com"}
]

dependencies = [
    "alpaca-py>=0.42.2",
    "loguru>=0.7.3",
    "matplotlib>=3.10.7",
    "numpy>=2.3.3",
    "pandas>=2.3.3",
    "pydantic>=2.12.2",
    "python-dotenv>=1.1.1",
    "scipy>=1.16.2",
    "seaborn>=0.13.2",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.1",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.3.1",  # Parallel test execution
    "pytest-timeout>=2.1.0",
    "hypothesis>=6.82.0",  # Property-based testing

    # Code quality
    "black>=23.7.0",
    "flake8>=6.1.0",
    "mypy>=1.4.1",
    "isort>=5.12.0",
    "pylint>=2.17.5",

    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",

    # Development tools
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.3",

    # Performance
    "line-profiler>=4.0.3",
    "memory-profiler>=0.61.0",
]

ml = [
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.6",
    "torch>=2.0.1",
    "optuna>=3.3.0",
]

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["src"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v -ra --strict-markers --cov=src --cov-report=term-missing --cov-report=html --cov-report=xml"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0103",  # Invalid name
    "C0114",  # Missing module docstring
    "R0913",  # Too many arguments
    "R0914",  # Too many local variables
]

[tool.uv.workspace]
members = [
    "python-trading",
]
