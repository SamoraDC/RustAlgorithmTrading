[pytest]
# Pytest configuration file

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths =
    tests/unit/python
    tests/integration/python
    tests/property
    tests/e2e

# Minimum version
minversion = 7.0

# Add current directory to Python path
pythonpath = .

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Enable strict markers
    --strict-markers
    # Show warnings
    -W default
    # Coverage options disabled (install pytest-cov to enable)
    # --cov-branch
    # --cov-report=term-missing
    # --cov-report=html:htmlcov
    # --cov-report=xml:coverage.xml
    # Benchmark options disabled (install pytest-benchmark to enable)
    # --benchmark-only
    # --benchmark-autosave
    # Parallel execution (install pytest-xdist)
    # -n auto

# Markers for test categorization
markers =
    slow: Marks tests as slow (deselect with '-m "not slow"')
    integration: Integration tests that require external services
    e2e: End-to-end tests that test complete workflows
    benchmark: Performance benchmark tests
    unit: Unit tests (default)
    property: Property-based tests using Hypothesis

# Test output
console_output_style = progress

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage
[coverage:run]
source = src
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */site-packages/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Timeout (install pytest-timeout)
timeout = 300
timeout_method = thread

# Filtering warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Doctest
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS

# Cache directory
cache_dir = .pytest_cache
